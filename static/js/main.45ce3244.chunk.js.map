{"version":3,"sources":["Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","className","map","tab","isTabSelected","id","type","classNames","onClick","handleTabSelect","title","content","App","useState","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"2NAWaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEIC,EAAcH,EAAK,GAQvB,OACE,sBAAKI,UAAU,OAAf,UACGJ,EAAKK,KAAI,SAAAC,GACR,IAAMC,EAAgBN,IAAkBK,EAAIE,GAM5C,OAJID,IACFJ,EAAcG,GAId,wBAEEG,KAAK,SACLL,UAAWM,IACT,eACA,CAAE,uBAAwBH,IAE5BI,QAAS,kBAvBK,SAACJ,EAAwBD,GAC1CC,GACHL,EAAcI,GAqBOM,CAAgBL,EAAeD,IAPhD,SASGA,EAAIO,OARAP,EAAIE,OAaf,oBAAIJ,UAAU,kBAEd,mBAAG,UAAQ,cAAX,SACGD,EAAYW,cC7CRd,G,MAAc,CACzB,CAAEQ,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,iBAkB3BC,EAfO,WACpB,MAAsCC,mBAAchB,EAAK,IAAzD,mBAAOG,EAAP,KAAoBc,EAApB,KAEA,OACE,sBAAKb,UAAU,MAAf,UACE,uDAAwBD,EAAYU,SACpC,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeE,EAAYK,GAC3BN,cAAee,QClBvBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.45ce3244.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from './Tab';\nimport './Tabs.scss';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: React.Dispatch<React.SetStateAction<Tab>>;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  let selectedTab = tabs[0];\n\n  const handleTabSelect = (isTabSelected: boolean, tab: Tab) => {\n    if (!isTabSelected) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div className=\"tabs\">\n      {tabs.map(tab => {\n        const isTabSelected = selectedTabId === tab.id;\n\n        if (isTabSelected) {\n          selectedTab = tab;\n        }\n\n        return (\n          <button\n            key={tab.id}\n            type=\"button\"\n            className={classNames(\n              'tabs__button',\n              { 'tabs__button--active': isTabSelected },\n            )}\n            onClick={() => handleTabSelect(isTabSelected, tab)}\n          >\n            {tab.title}\n          </button>\n        );\n      })}\n\n      <hr className=\"tabs__divider\" />\n\n      <p data-cy=\"tab-content\">\n        {selectedTab.content}\n      </p>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { Tabs } from './Tabs';\nimport './App.scss';\nimport { Tab } from './Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState<Tab>(tabs[0]);\n\n  return (\n    <div className=\"App\">\n      <h1>{`Selected tab is ${selectedTab.title}`}</h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={setSelectedTab}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}